{"ast":null,"code":"var _jsxFileName = \"/Users/cemplex/PycharmProjects/Schedule/inventory/src/Components/Prompt.js\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport NavigationPrompt from \"react-router-navigation-prompt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Prompt() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationPrompt, {\n      beforeConfirm: clb => this.cleanup(clb) //call the callback function when finished cleaning up\n      // Children will be rendered even if props.when is falsey and isActive is false:\n      ,\n      renderIfNotActive: true\n      // Confirm navigation if going to a path that does not start with current path:\n      ,\n      when: (crntLocation, nextLocation, _action) => !nextLocation || !nextLocation.pathname.startsWith(crntLocation.pathname),\n      children: _ref => {\n        let {\n          isActive,\n          onCancel,\n          onConfirm\n        } = _ref;\n        if (isActive) {\n          return /*#__PURE__*/_jsxDEV(Modal, {\n            show: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Do you really want to leave?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: onCancel,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: onConfirm,\n                children: \"Ok\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"This is probably an anti-pattern but ya know...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 24\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), \";\"]\n  }, void 0, true);\n}\n_c = Prompt;\nexport default Prompt;\nvar _c;\n$RefreshReg$(_c, \"Prompt\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","NavigationPrompt","Prompt","clb","cleanup","crntLocation","nextLocation","_action","pathname","startsWith","isActive","onCancel","onConfirm"],"sources":["/Users/cemplex/PycharmProjects/Schedule/inventory/src/Components/Prompt.js"],"sourcesContent":["import React, {useEffect, useMemo, useRef, useState} from \"react\";\nimport NavigationPrompt from \"react-router-navigation-prompt\";\nfunction Prompt() {\n\n\n\n\n    return (\n        <>\n            <NavigationPrompt\n              beforeConfirm={(clb)=>this.cleanup(clb)} //call the callback function when finished cleaning up\n              // Children will be rendered even if props.when is falsey and isActive is false:\n              renderIfNotActive={true}\n              // Confirm navigation if going to a path that does not start with current path:\n              when={(crntLocation, nextLocation, _action) =>\n                !nextLocation || !nextLocation.pathname.startsWith(crntLocation.pathname)\n              }\n            >\n              {({ isActive, onCancel, onConfirm }) => {\n                if (isActive) {\n                  return (\n                    <Modal show={true}>\n                      <div>\n                        <p>Do you really want to leave?</p>\n                        <button onClick={onCancel}>Cancel</button>\n                        <button onClick={onConfirm}>Ok</button>\n                      </div>\n                    </Modal>\n                  );\n                }\n                return <div>This is probably an anti-pattern but ya know...</div>;\n              }}\n            </NavigationPrompt>;\n        </>\n    );\n}\n\nexport default Prompt;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACjE,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC;AAAA;AAC9D,SAASC,MAAM,GAAG;EAKd,oBACI;IAAA,wBACI,QAAC,gBAAgB;MACf,aAAa,EAAGC,GAAG,IAAG,IAAI,CAACC,OAAO,CAACD,GAAG,CAAE,CAAC;MACzC;MAAA;MACA,iBAAiB,EAAE;MACnB;MAAA;MACA,IAAI,EAAE,CAACE,YAAY,EAAEC,YAAY,EAAEC,OAAO,KACxC,CAACD,YAAY,IAAI,CAACA,YAAY,CAACE,QAAQ,CAACC,UAAU,CAACJ,YAAY,CAACG,QAAQ,CACzE;MAAA,UAEA,QAAuC;QAAA,IAAtC;UAAEE,QAAQ;UAAEC,QAAQ;UAAEC;QAAU,CAAC;QACjC,IAAIF,QAAQ,EAAE;UACZ,oBACE,QAAC,KAAK;YAAC,IAAI,EAAE,IAAK;YAAA,uBAChB;cAAA,wBACE;gBAAA,UAAG;cAA4B;gBAAA;gBAAA;gBAAA;cAAA,QAAI,eACnC;gBAAQ,OAAO,EAAEC,QAAS;gBAAA,UAAC;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAAS,eAC1C;gBAAQ,OAAO,EAAEC,SAAU;gBAAA,UAAC;cAAE;gBAAA;gBAAA;gBAAA;cAAA,QAAS;YAAA;cAAA;cAAA;cAAA;YAAA;UACnC;YAAA;YAAA;YAAA;UAAA,QACA;QAEZ;QACA,oBAAO;UAAA,UAAK;QAA+C;UAAA;UAAA;UAAA;QAAA,QAAM;MACnE;IAAC;MAAA;MAAA;MAAA;IAAA,QACgB,KACvB;EAAA,gBAAG;AAEX;AAAC,KAjCQV,MAAM;AAmCf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}